{"version":3,"file":"static/js/287.623a09b2.chunk.js","mappings":"4OACA,GAAgB,KAAO,oBAAoB,aAAe,4BAA4B,KAAO,oBAAoB,KAAO,oBAAoB,MAAQ,qBAAqB,SAAW,yB,SCyEpL,EAhEc,WAGZ,OAA+BA,EAAAA,EAAAA,UAAS,IAAG,eAApCC,EAAM,KAAEC,EAAY,KAC3B,GAA6BF,EAAAA,EAAAA,UAAS,IAAG,eAAlCG,EAAI,KAAEC,EAAY,KACnBC,GAAWC,EAAAA,EAAAA,MAGXC,GAAWC,EAAAA,EAAAA,MAaXC,EAAW,SAACC,GAEhB,GADAA,EAAEC,iBACW,KAATR,GAA0B,KAAXF,EACjB,OAAOW,MAAM,6DAEbL,GAASM,EAAAA,EAAAA,IAAeZ,EAAQE,IAChCD,EAAa,IACbE,EAAa,IACbC,EAAS,SAEb,EAEA,OACE,iBAAKS,UAAWC,EAAAA,KAAa,WAC3B,gBAAKD,UAAWC,EAAAA,aAAqB,UACnC,SAACC,EAAA,EAAS,CAACC,GAAG,cAEhB,kBAAMH,UAAWC,EAAAA,KAAcN,SAAUA,EAAS,WAChD,gBAAKK,UAAWC,EAAAA,WAAmB,UACjC,SAAC,KAAI,CAACE,GAAG,QAAO,UACd,gBAAKH,UAAWC,EAAAA,KAAa,SAAC,wBAGlC,kBACED,UAAWC,EAAAA,MACXG,YAAY,OACZC,SApCa,SAACT,GACpBR,EAAaQ,EAAEU,OAAOC,MACxB,EAmCQA,MAAOpB,KAET,qBACEa,UAAWC,EAAAA,SACXG,YAAY,WACZC,SArCa,SAACT,GACpBN,EAAaM,EAAEU,OAAOC,MACxB,EAoCQA,MAAOlB,QAGX,SAACmB,EAAA,EAAM,CAACC,KAAK,SAASC,QAASf,EAAS,SAAC,aAK/C,C","sources":["webpack://toy_board/./src/page/Write.module.css?b3eb","page/Write.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Write_main__Kydsm\",\"BackSpaceDiv\":\"Write_BackSpaceDiv__02cTS\",\"form\":\"Write_form__eR8Yw\",\"draw\":\"Write_draw__kH8tE\",\"input\":\"Write_input__h0kyQ\",\"textarea\":\"Write_textarea__MRhDE\"};","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BackSpace from \"../components/UI/BackSpace\";\nimport Button from \"../components/UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { addGuest_Write } from \"../action/action\";\n\nimport classes from \"./Write.module.css\";\n\n// 방명록 글쓰기\nconst Write = () => {\n  // 값이 변경될 때마다 실행\n  // input, textarea에서 입력한 값을 value라는 값으로 Write가 가지고 있는 상태\n  const [author, setValueName] = useState(\"\");\n  const [text, setValueText] = useState(\"\");\n  const navigate = useNavigate();\n\n  //Redux\n  const dispatch = useDispatch();\n\n  // input이 변경될 때마다 실행\n  const onChangeName = (e) => {\n    setValueName(e.target.value);\n  };\n\n  // textarea이 변경될 때마다 실행\n  const onChangeText = (e) => {\n    setValueText(e.target.value);\n  };\n\n  // 새로고침 방지 & 내용 비우기 & 상태 끌어올리기?\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (text === \"\" || author === \"\") {\n      return alert(\"빈 칸을 작성해 주세요\");\n    } else {\n      dispatch(addGuest_Write(author, text));\n      setValueName(\"\");\n      setValueText(\"\");\n      navigate(\"/guest\");\n    }\n  };\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.BackSpaceDiv}>\n        <BackSpace to=\"/guest\" />\n      </div>\n      <form className={classes.form} onSubmit={onSubmit}>\n        <div className={classes.backsubmit}>\n          <Link to=\"/draw\">\n            <div className={classes.draw}>Draw In Canvas</div>\n          </Link>\n        </div>\n        <input\n          className={classes.input}\n          placeholder=\"Name\"\n          onChange={onChangeName}\n          value={author}\n        ></input>\n        <textarea\n          className={classes.textarea}\n          placeholder=\"New Text\"\n          onChange={onChangeText}\n          value={text}\n        ></textarea>\n      </form>\n      <Button type=\"submit\" onClick={onSubmit}>\n        Submit\n      </Button>\n    </div>\n  );\n};\n\nexport default Write;\n"],"names":["useState","author","setValueName","text","setValueText","navigate","useNavigate","dispatch","useDispatch","onSubmit","e","preventDefault","alert","addGuest_Write","className","classes","BackSpace","to","placeholder","onChange","target","value","Button","type","onClick"],"sourceRoot":""}