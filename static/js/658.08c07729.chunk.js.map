{"version":3,"file":"static/js/658.08c07729.chunk.js","mappings":"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","sources":["webpack://toy_board/./src/page/Draw.module.css?2529","page/Draw.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Draw_main__j2oAg\",\"BackSpaceDiv\":\"Draw_BackSpaceDiv__QwE4d\",\"button\":\"Draw_button__A6QTt\",\"draw\":\"Draw_draw__leF6X\",\"canvas\":\"Draw_canvas__q-ze4\",\"input\":\"Draw_input__vuCZb\",\"color\":\"Draw_color__PPbbW\",\"red\":\"Draw_red__zRZ79\",\"orange\":\"Draw_orange__jd0D6\",\"yellow\":\"Draw_yellow__++5-5\",\"green\":\"Draw_green__Ln47z\",\"blue\":\"Draw_blue__Y-5BL\",\"puple\":\"Draw_puple__3N4Is\",\"white\":\"Draw_white__blVqR\",\"black\":\"Draw_black__MEjig\"};","import React, { useRef, useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport BackSpace from \"../components/UI/BackSpace\";\nimport Button from \"../components/UI/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { addGuest_Draw } from \"../action/action\";\n\nimport classes from \"./Draw.module.css\";\n\nconst Draw = () => {\n  const navigate = useNavigate();\n  const canvasRef = useRef(null);\n  const dispatch = useDispatch();\n  // getCtx\n  const [getCtx, setGetCtx] = useState(null);\n  // painting state\n  const [painting, setPainting] = useState(false);\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    // canvas useRef\n    const canvas = canvasRef.current;\n    canvas.width = 1500;\n    canvas.height = 350;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineJoin = \"round\";\n    ctx.lineWidth = 2.5;\n    ctx.strokeStyle = \"#000000\";\n    setGetCtx(ctx);\n  }, []);\n\n  const drawFn = (e) => {\n    // mouse position\n    const mouseX = e.nativeEvent.offsetX;\n    const mouseY = e.nativeEvent.offsetY;\n    // drawing\n    if (!painting) {\n      getCtx.beginPath();\n      getCtx.moveTo(mouseX, mouseY);\n    } else {\n      getCtx.lineTo(mouseX, mouseY);\n      getCtx.stroke();\n    }\n  };\n\n  const buttonClickHandle = () => {\n    if (name !== \"\") {\n      const drawimg = canvasRef.current.toDataURL();\n      dispatch(addGuest_Draw(name, drawimg));\n      navigate(\"/guest\");\n    } else {\n      alert(\"이름을 입력해 주세요.\");\n    }\n  };\n\n  const changeColor = (e) => {\n    if (e.target.textContent === \"Red\") {\n      getCtx.strokeStyle = \"#e4491e\";\n    } else if (e.target.textContent === \"Black\") {\n      getCtx.strokeStyle = \"#000000\";\n    } else if (e.target.textContent === \"Orange\") {\n      getCtx.strokeStyle = \"#fba818\";\n    } else if (e.target.textContent === \"Yellow\") {\n      getCtx.strokeStyle = \"#fce72b\";\n    } else if (e.target.textContent === \"Green\") {\n      getCtx.strokeStyle = \"#73d573\";\n    } else if (e.target.textContent === \"Blue\") {\n      getCtx.strokeStyle = \"#48b0ff\";\n    } else if (e.target.textContent === \"Puple\") {\n      getCtx.strokeStyle = \"#9768f6\";\n    } else if (e.target.textContent === \"White\") {\n      getCtx.strokeStyle = \"#ffffff\";\n    }\n  };\n\n  const onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.BackSpaceDiv}>\n        <BackSpace to=\"/guest\" />\n      </div>\n      <div className={classes.backsubmit}>\n        <Link to=\"/write\">\n          <div className={classes.draw}>Write</div>\n        </Link>\n      </div>\n      <div className=\"canvasWrap\">\n        <input\n          className={classes.input}\n          placeholder=\"Name\"\n          onChange={onChangeName}\n          value={name}\n        ></input>\n        <canvas\n          className={classes.canvas}\n          ref={canvasRef}\n          onMouseDown={() => setPainting(true)}\n          onMouseUp={() => setPainting(false)}\n          onMouseMove={(e) => drawFn(e)}\n          onMouseLeave={() => setPainting(false)}\n        ></canvas>\n      </div>\n      <div className={classes.color}>\n        <button className={classes.red} onClick={changeColor}>\n          {\"Red\"}\n        </button>\n        <button className={classes.orange} onClick={changeColor}>\n          {\"Orange\"}\n        </button>\n        <button className={classes.yellow} onClick={changeColor}>\n          {\"Yellow\"}\n        </button>\n        <button className={classes.green} onClick={changeColor}>\n          {\"Green\"}\n        </button>\n        <button className={classes.blue} onClick={changeColor}>\n          {\"Blue\"}\n        </button>\n        <button className={classes.puple} onClick={changeColor}>\n          {\"Puple\"}\n        </button>\n        <button className={classes.white} onClick={changeColor}>\n          {\"White\"}\n        </button>\n        <button className={classes.black} onClick={changeColor}>\n          {\"Black\"}\n        </button>\n      </div>\n      <Button className={classes.button} onClick={buttonClickHandle}>\n        Submit\n      </Button>\n    </div>\n  );\n};\n\nexport default Draw;\n"],"names":["navigate","useNavigate","canvasRef","useRef","dispatch","useDispatch","useState","getCtx","setGetCtx","painting","setPainting","name","setName","useEffect","canvas","current","width","height","ctx","getContext","lineJoin","lineWidth","strokeStyle","changeColor","e","target","textContent","className","classes","BackSpace","to","placeholder","onChange","value","ref","onMouseDown","onMouseUp","onMouseMove","mouseX","nativeEvent","offsetX","mouseY","offsetY","lineTo","stroke","beginPath","moveTo","drawFn","onMouseLeave","onClick","Button","drawimg","toDataURL","addGuest_Draw","alert"],"sourceRoot":""}